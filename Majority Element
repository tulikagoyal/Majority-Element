Given an array of size n, find the majority element. The majority element is the element that appears more than floor(n/2) times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example :

Input : [2, 1, 2]
Return  : 2 which occurs 2 times which is greater than 3/2.

SOLUTION:
int Solution::majorityElement(const vector<int> &A) {
    map<int,int> mp;
    int n=A.size();
    for(int i=0;i<n;i++){
        mp[A[i]]++;
    }
    int mx=0;
    int ans;
    for(auto x : mp){
        if(x.second>=mx){
            mx=x.second;
            ans=x.first;
        }
    }
    return ans;
}
